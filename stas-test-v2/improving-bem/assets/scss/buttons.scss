.btn {
  align-self: flex-start;
  background-color: $color-primary;
  border-radius: $border-radius;
  border: none;
  color: white;
  cursor: pointer;
  font-family: $font-display;
  font-size: 1.1rem;
  font-weight: bold;
  padding: 1.2rem 2.5rem;
  text-transform: uppercase;
  transition: all 0.2s;
  position: relative;
  text-decoration: none;
  

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-primary, 0.7);

    &::after{
        transform: scaleX(1.4) scaleY(1.6);
        opacity: 0;
    }
  }

  &:active, &:focus {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-primary, 0.7);
    /* when user presses the button :active pseudo class applies */
  }

  &::after {
      content: "";
      display: inline-block;
      height: 100%;
      width: 100%;
      border-radius: 10rem;
      /* to hide new button behind */
      /* ::after - creates a copy of a button */
      position: absolute; 
      /* position will try to find first ref. The first ref now is "header text and button" div. We need to change it */
      /* so we added position relative to .btn:link */
      top: 0;
      left: 0;
      z-index: -1;
      transition: .4s;
      /* https://www.w3schools.com/css/css3_transitions.asp */
  }

  &--animated {
    /* animation-name: headerButtonAnimation;
    animation-duration: .5s;  */
    animation: headerButtonAnimation .5s ease-out .75s;
    animation-fill-mode: backwards; /* added because after adding delay. 4th animation param*/
    /* The animation-fill-mode property defines what values 
    are applied by an animation outside the time it is executing. 
    animation-fill-mode: backwards; also worked for me in this case - the same way
    animation-fill-mode = Определяет, какие стили должны применяться к элементу, когда анимация не проигрывается. 
    Например, после её завершения или при остановке. 
    По умолчанию, в момент окончания анимации стиль элемента возвращается к исходному, 
    свойство animation-fill-mode позволяет изменить это поведение и сделать так, чтобы стиль элемента 
    оставался как у последнего ключевого кадра.
    */
  }
}

@keyframes headerButtonAnimation {
	0% {
		opacity: 0;
		transform: translateY(3rem);
	}
	100% {
		opacity: 1;
	}
}
